name: Release

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID of the build workflow (build-cli.yml) to use for the artifacts'
        required: true
        default: '13042045029'
      version:
        description: 'desired version'
        required: true
        default: 'v0.1.7'

jobs:
  publish-production:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Linux and Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifacts
          run-id: ${{ github.event.inputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/cli/

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifacts-macos
          run-id: ${{ github.event.inputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/cli/

      - name: Create Production Release
        id: create_production_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Project Epoch Release ${{ github.event.inputs.version }}
          draft: true
          prerelease: false
          files: |
            dist/cli/epoch_patcher-cli-linux-x86_64
            dist/cli/epoch_patcher-cli-windows-x86_64.exe
            dist/cli/epoch_patcher-cli-macos-x86_64
            dist/cli/epoch_patcher-cli-macos-aarch64
            LICENSE
            README.md

  publish-demo:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Linux and Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifacts
          run-id: ${{ github.event.inputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/cli/

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifacts-macos
          run-id: ${{ github.event.inputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/cli/

      - name: Create Demo Release
        id: create_demo_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}-demo
          name: Demo Launcher Release ${{ github.event.inputs.version }}
          draft: true
          prerelease: true
          files: |
            dist/cli/downloader-cli-linux-x86_64
            dist/cli/downloader-cli-windows-x86_64.exe
            dist/cli/downloader-cli-macos-x86_64
            dist/cli/downloader-cli-macos-aarch64
            LICENSE
            README.md

  publish-demo-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      - name: Install frontend dependencies
        run: |
          cd launcher-gui
          bun install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: launcher-gui
          tagName: ${{ github.event.inputs.version }}-demo
          releaseName: "Demo Launcher GUI v${{ github.event.inputs.version }}"
          releaseBody: "Demo version - For testing purposes only. See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
