name: Build

on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          components: clippy, rustfmt
      - name: format
        run: |
          cargo fmt --version
          cargo fmt --all -- --check
      - name: lint
        run: |
          cargo clippy --version
          cargo clippy -- -D warnings
      - name: test
        run: cargo test --verbose

  build-cli:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          targets: x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu
      - name: Prepare dist directory
        run: mkdir -p dist/cli
      - name: Copy LICENSE to dist
        run: cp LICENSE dist/
      - name: Build Linux
        run: |
          cd downloader-cli
          cargo build --locked --release --target x86_64-unknown-linux-gnu
          mv ../target/x86_64-unknown-linux-gnu/release/downloader-cli ../dist/cli/downloader-cli-linux-x86_64
      - name: Setup Windows - Install mingw-w64
        run: sudo apt-get install -y mingw-w64
      - name: Build Windows
        run: |
          cd downloader-cli
          cargo build --locked --release --target x86_64-pc-windows-gnu
          mv ../target/x86_64-pc-windows-gnu/release/downloader-cli.exe ../dist/cli/downloader-cli-windows-x86_64.exe
      - name: Upload CLI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-artifacts
          path: dist/cli/
          retention-days: 3

  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-24.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: 'tauri-game-launcher/package-lock.json'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export BUN_INSTALL="$HOME/.bun"
          export PATH="$BUN_INSTALL/bin:$PATH"

      - name: Install dependencies
        run: |
          cd tauri-game-launcher
          bun install

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: tauri-game-launcher
          tauriScript: bun run tauri
          args: build

      - name: Upload Tauri artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-artifacts-${{ matrix.platform }}
          path: |
            tauri-game-launcher/src-tauri/target/release/bundle/deb/*.deb
            tauri-game-launcher/src-tauri/target/release/bundle/appimage/*.AppImage
            tauri-game-launcher/src-tauri/target/release/bundle/msi/*.msi
          if-no-files-found: ignore
          retention-days: 3

  create-dist:
    needs: [build-cli, build-tauri]
    runs-on: ubuntu-24.04
    steps:
      - name: Download CLI artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-artifacts
          path: dist/cli

      - name: Download Tauri Ubuntu artifacts
        uses: actions/download-artifact@v4
        with:
          name: tauri-artifacts-ubuntu-24.04
          path: dist/tauri

      - name: Download Tauri Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: tauri-artifacts-windows-latest
          path: dist/tauri

      - name: Upload combined artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 3
